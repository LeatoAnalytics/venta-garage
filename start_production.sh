#!/bin/bash

echo "üöÄ Iniciando aplicaci√≥n Venta Garage en producci√≥n..."
echo "üìÖ $(date)"

# Validar variables cr√≠ticas de Supabase
if [ -z "$SUPABASE_URL" ] || [ -z "$SUPABASE_ANON_KEY" ]; then
    echo "‚ùå Error: Faltan credenciales de Supabase"
    echo "SUPABASE_URL: ${SUPABASE_URL:+‚úÖ}${SUPABASE_URL:-‚ùå}"
    echo "SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY:+‚úÖ}${SUPABASE_ANON_KEY:-‚ùå}"
    exit 1
fi

# Validar variables cr√≠ticas de AWS
if [ -z "$AWS_ACCESS_KEY_ID" ] || [ -z "$AWS_SECRET_ACCESS_KEY" ] || [ -z "$S3_BUCKET_NAME" ]; then
    echo "‚ùå Error: Faltan credenciales de AWS"
    echo "AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:+‚úÖ}${AWS_ACCESS_KEY_ID:-‚ùå}"
    echo "AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:+‚úÖ}${AWS_SECRET_ACCESS_KEY:-‚ùå}"
    echo "S3_BUCKET_NAME: ${S3_BUCKET_NAME:+‚úÖ}${S3_BUCKET_NAME:-‚ùå}"
    exit 1
fi

echo "‚úÖ Todas las credenciales validadas correctamente"

# Configurar variables de entorno para Flask
export FLASK_APP=app_supabase.py
export FLASK_ENV=production
export PORT=${PORT:-5001}

echo "üîß Configuraci√≥n:"
echo "   - FLASK_APP: $FLASK_APP"
echo "   - FLASK_ENV: $FLASK_ENV"
echo "   - PORT: $PORT"

# Verificar que la aplicaci√≥n existe
if [ ! -f "$FLASK_APP" ]; then
    echo "‚ùå Error: Archivo de aplicaci√≥n $FLASK_APP no encontrado"
    exit 1
fi

echo "‚úÖ Archivo de aplicaci√≥n encontrado: $FLASK_APP"

# Iniciar aplicaci√≥n con Gunicorn
echo "üöÄ Iniciando servidor con Gunicorn..."
exec gunicorn \
    --bind 0.0.0.0:$PORT \
    --workers 2 \
    --worker-class sync \
    --timeout 30 \
    --log-level info \
    --access-logfile - \
    --error-logfile - \
    app_supabase:app 